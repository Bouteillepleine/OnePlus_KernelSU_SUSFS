name: Build and Release OnePlus Kernels

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
    inputs:
      make_release:
        description: 'Do you want to create a release?'
        required: true
        type: boolean
        default: false
      suki_branch:
        description: "Choose SukiSU Branch"
        required: true
        type: choice
        options:
          - main
          - susfs-main
        default: main
      KPM:
        description: 'Apply patch_linux and replace Image'
        required: false
        type: boolean
        default: false
      KSU_META:
        type: string
        description: "Branch Name (cannot be empty)/Custom Version Identifier (leave empty to not modify)"
        required: false
        default: "susfs-main/⚡Ultra⚡"
      HOOK:
        description: 'Hook method (kprobe, manual)'
        required: true
        type: choice
        options:
          - kprobe
          - manual
        default: 'manual'
      SCHED:
        description: 'Add Fengchi Driver?'
        required: true
        type: boolean
        default: false
      susfs_branch:
        description: 'JSON object mapping Android/kernel versions to SusFS branches (e.g., {"android12-5.10":"gki-android12-5.10","android13-5.15":"gki-android13-5.15",...})'
        type: string
        default: '{"android12-5.10":"gki-android12-5.10","android13-5.10":"gki-android13-5.10","android13-5.15":"gki-android13-5.15","android14-5.15":"gki-android14-5.15","android14-6.1":"gki-android14-6.1","android15-6.6":"gki-android15-6.6"}'

jobs:
  build-batch-1:
    name: build-batch-1 (${{ matrix.model }}, ${{ matrix.soc }}, ${{ matrix.branch }}, ${{ matrix.manifest }}, ${{ matrix.android_version }}, ${{ matrix.kernel_version }}, ${{ inputs.suki_branch }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - model: OP11
            soc: kalama
            branch: oneplus/sm8550
            manifest: oneplus_11_v.xml
            android_version: android13
            kernel_version: "5.15"
          - model: OP11r
            soc: waipio
            branch: oneplus/sm8475
            manifest: oneplus_11r_v.xml
            android_version: android12
            kernel_version: "5.10"
          - model: OP-OPEN
            soc: kalama
            branch: oneplus/sm8550
            manifest: oneplus_open_v.xml
            android_version: android13
            kernel_version: "5.15"
          - model: OP-ACE-2
            soc: waipio
            branch: oneplus/sm8475
            manifest: oneplus_ace2_v.xml
            android_version: android12
            kernel_version: "5.10"
          - model: OP10t
            soc: waipio
            branch: oneplus/sm8475
            manifest: oneplus_10t_v.xml
            android_version: android12
            kernel_version: "5.10"
          - model: OP10pro
            soc: waipio
            branch: oneplus/sm8450
            manifest: oneplus_10_pro_v.xml
            android_version: android12
            kernel_version: "5.10"
          - model: OP-ACE-2-PRO
            soc: kalama
            branch: oneplus/sm8550
            manifest: oneplus_ace2_pro_v.xml
            android_version: android13
            kernel_version: "5.15"
          - model: OP12r
            soc: kalama
            branch: oneplus/sm8550
            manifest: oneplus_12r_v.xml
            android_version: android13
            kernel_version: "5.15"
    runs-on: ubuntu-latest
    steps:
      - name: Select Appropriate SusFS Branch
        id: get-susfs-branch
        run: |
          KERNEL_STRING="${{ matrix.android_version }}-${{ matrix.kernel_version }}"
          DEFAULT_BRANCH="gki-${{ matrix.android_version }}-${{ matrix.kernel_version }}"
          
          SUSFS_JSON="${{ inputs.susfs_branch }}"
          if [[ -z "$SUSFS_JSON" ]]; then
            echo "No susfs_branch input provided, using default: $DEFAULT_BRANCH"
            SUSFS_BRANCH="$DEFAULT_BRANCH"
          else
            if echo "$SUSFS_JSON" | jq . >/dev/null 2>&1; then
              SUSFS_BRANCH=$(echo "$SUSFS_JSON" | jq -r ".\"$KERNEL_STRING\" // \"$DEFAULT_BRANCH\"")
            else
              echo "Invalid JSON in susfs_branch input: $SUSFS_JSON"
              echo "Falling back to default: $DEFAULT_BRANCH"
              SUSFS_BRANCH="$DEFAULT_BRANCH"
            fi
          fi
          
          if [[ -z "$SUSFS_BRANCH" ]]; then
            SUSFS_BRANCH="$DEFAULT_BRANCH"
          fi
          
          echo "Selected SusFS branch: $SUSFS_BRANCH"
          echo "susfs_branch=$SUSFS_BRANCH" >> $GITHUB_OUTPUT
        env:
          DEBIAN_FRONTEND: noninteractive
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build Kernel
        uses: ./.github/actions
        with:
          model: ${{ matrix.model }}
          soc: ${{ matrix.soc }}
          branch: ${{ matrix.branch }}
          manifest: ${{ matrix.manifest }}
          android_version: ${{ matrix.android_version }}
          kernel_version: ${{ matrix.kernel_version }}
          ksun_branch: ${{ inputs.suki_branch }}
          susfs_branch: ${{ steps.get-susfs-branch.outputs.susfs_branch }}
          KPM: ${{ inputs.KPM }}
          KSU_META: ${{ inputs.KSU_META }}
          HOOK: ${{ inputs.HOOK }}
          SCHED: ${{ inputs.SCHED }}
          SUSFS_CI: ${{ inputs.SUSFS_CI }}

  build-batch-2:
    name: build-batch-2 (${{ matrix.model }}, ${{ matrix.soc }}, ${{ matrix.branch }}, ${{ matrix.manifest }}, ${{ matrix.android_version }}, ${{ matrix.kernel_version }}, ${{ inputs.suki_branch }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - model: OP13
            soc: sun
            branch: oneplus/sm8750
            manifest: oneplus_13.xml
            android_version: android15
            kernel_version: "6.6"
          - model: OPAce5Pro
            soc: sun
            branch: oneplus/sm8750
            manifest: oneplus_ace5_pro.xml
            android_version: android15
            kernel_version: "6.6"
          - model: OP12
            soc: pineapple
            branch: oneplus/sm8650
            manifest: oneplus12_v.xml
            android_version: android14
            kernel_version: "6.1"
          - model: OP13r
            soc: pineapple
            branch: oneplus/sm8650
            manifest: oneplus_13r.xml
            android_version: android14
            kernel_version: "6.1"
          - model: OP-ACE-5
            soc: pineapple
            branch: oneplus/sm8650
            manifest: oneplus_ace5.xml
            android_version: android14
            kernel_version: "6.1"
          - model: OP-ACE-3V
            soc: pineapple
            branch: oneplus/sm7675
            manifest: oneplus_ace_3v_v.xml
            android_version: android14
            kernel_version: "6.1"
          - model: OP-NORD-4
            soc: pineapple
            branch: oneplus/sm7675
            manifest: oneplus_nord_4_v.xml
            android_version: android14
            kernel_version: "6.1"
          - model: OP-PAD-2
            soc: pineapple
            branch: oneplus/sm8650
            manifest: oneplus_pad2_v.xml
            android_version: android14
            kernel_version: "6.1"
          - model: OP13S
            soc: sun
            branch: oneplus/sm8750
            manifest: oneplus_13s.xml
            android_version: android15
            kernel_version: "6.6"
          - model: OP-Ace3-Pro
            soc: pineapple
            branch: oneplus/sm8650
            manifest: oneplus_ace3_pro_v.xml
            android_version: android14
            kernel_version: "6.1"
    runs-on: ubuntu-latest
    steps:
      - name: Select Appropriate SusFS Branch
        id: get-susfs-branch
        run: |
          KERNEL_STRING="${{ matrix.android_version }}-${{ matrix.kernel_version }}"
          DEFAULT_BRANCH="gki-${{ matrix.android_version }}-${{ matrix.kernel_version }}"
          
          SUSFS_JSON="${{ inputs.susfs_branch }}"
          if [[ -z "$SUSFS_JSON" ]]; then
            echo "No susfs_branch input provided, using default: $DEFAULT_BRANCH"
            SUSFS_BRANCH="$DEFAULT_BRANCH"
          else
            if echo "$SUSFS_JSON" | jq . >/dev/null 2>&1; then
              SUSFS_BRANCH=$(echo "$SUSFS_JSON" | jq -r ".\"$KERNEL_STRING\" // \"$DEFAULT_BRANCH\"")
            else
              echo "Invalid JSON in susfs_branch input: $SUSFS_JSON"
              echo "Falling back to default: $DEFAULT_BRANCH"
              SUSFS_BRANCH="$DEFAULT_BRANCH"
            fi
          fi
          
          if [[ -z "$SUSFS_BRANCH" ]]; then
            SUSFS_BRANCH="$DEFAULT_BRANCH"
          fi
          
          echo "Selected SusFS branch: $SUSFS_BRANCH"
          echo "susfs_branch=$SUSFS_BRANCH" >> $GITHUB_OUTPUT
        env:
          DEBIAN_FRONTEND: noninteractive
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build Kernel
        uses: ./.github/actions
        with:
          model: ${{ matrix.model }}
          soc: ${{ matrix.soc }}
          branch: ${{ matrix.branch }}
          manifest: ${{ matrix.manifest }}
          android_version: ${{ matrix.android_version }}
          kernel_version: ${{ matrix.kernel_version }}
          ksun_branch: ${{ inputs.suki_branch }}
          susfs_branch: ${{ steps.get-susfs-branch.outputs.susfs_branch }}
          KPM: ${{ inputs.KPM }}
          KSU_META: ${{ inputs.KSU_META }}
          HOOK: ${{ inputs.HOOK }}
          SCHED: ${{ inputs.SCHED }}
          SUSFS_CI: ${{ inputs.SUSFS_CI }}

  trigger-release:
    needs:
      - build-batch-1
      - build-batch-2
    runs-on: ubuntu-latest
    if: ${{ inputs.make_release }}
    env:
      REPO_OWNER: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_NAME: "*TEST BUILD* OnePlus Kernels With SukiSU Ultra & SUSFS v1.5.9 *TEST BUILD*"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Generate and Create New Tag
        run: |
          BASE_TAG="v1.5.9-r0"
          LATEST_TAG=$(gh api repos/$REPO_OWNER/$REPO_NAME/tags --jq '.[0].name')
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="$BASE_TAG"
          else
            LATEST_TAG=$(printf "%s\n%s\n" "$LATEST_TAG" "$BASE_TAG" | sort -rV | head -n1)
          fi
          NEW_TAG=$(echo "$LATEST_TAG" | awk -F'-r' '{suffix=$2; if (!suffix) suffix=0; suffix++; printf "%s-r%d", $1, suffix}')
          echo "New tag: $NEW_TAG"
          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV
          git tag $NEW_TAG
          git push origin $NEW_TAG
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts

      - name: Generate Device List and Final Release Notes
        id: generate-notes
        run: |
          echo "=== Start building the release notes ==="
          cat << EOF > release_notes.md
          This release contains SukiSU Ultra and SUSFS v1.5.9
          
          Module: 
          -> https://github.com/sidex15/ksu_module_susfs  
          
          Non-Official Managers:
          -> https://github.com/SukiSU-Ultra/SukiSU-Ultra  
          
          ### Built Devices
          
          | Model | Kernel Version |
          |-------|----------------|
          EOF
          
          for file in $(find downloaded-artifacts -name "*.txt" -type f | sort); do
            if [ -f "$file" ]; then
              model=$(basename "$file" .txt)
              version=$(cat "$file")
              printf "| %-12s | %-16s |\n" "$model" "$version" >> release_notes.md
            fi
          done
          
          cat << 'EOF' >> release_notes.md
          
          ### Features
          - [+] SukiSU-Ultra
          - [+] SUSFS v1.5.9
          - [+] Wireguard Support
          - [+] Maphide LineageOS Detections
          - [+] Futile Maphide for jit-zygote-cache Detections
          - [+] Magic Mount Support
          - [+] Ptrace message leak fix for kernels < 5.16
          - [+] Manual Hooks [scope_min_manual_hooks_v1.4]
          - [+] CONFIG_TMPFS_XATTR Support [Mountify Support]
          - [+] BBR v1 Support
          - [+] HMBIRD scx support for OnePlus 13 & OnePlus Ace 5 Pro
          EOF
          
          echo "--- Final Release Notes ---"
          cat release_notes.md
      - name: Create GitHub Release
        run: |
          gh release create "${{ env.NEW_TAG }}" \
            --repo "${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}" \
            --title "${{ env.RELEASE_NAME }}" \
            --notes-file release_notes.md \
            --prerelease
      - name: Upload Release Assets Dynamically
        run: |
          for file in ./downloaded-artifacts/*/*.zip; do
            if [ -f "$file" ]; then
              echo "Uploading $file..."
              gh release upload "${{ env.NEW_TAG }}" "$file" --clobber
            fi
          done
