name: Build and Release OnePlus Kernels

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
    inputs:
      configs:
        description: "Comma-separated device configs (e.g., oneplus_13r,oneplus12_v,oneplus_13)"
        required: true
        type: string
        default: "oneplus_13r"
      make_release:
        description: 'Do you want to create a release?'
        required: true
        type: boolean
        default: false
      ksun_branch:
        description: 'Enter SukiSU Ultra Branch or commit hash (blank for stable tag)'
        required: true
        type: string
        default: "main"
      optimize_level:
        description: 'Compiler optimization level'
        required: true
        type: choice
        options: [O2, O3]
        default: O2
      KSU_META:
        description: 'SukiSU Ultra branch/custom version identifier (e.g., susfs-main/⚡Ultra⚡/)'
        required: false
        type: string
        default: 'susfs-main/⚡Ultra⚡/'
      HOOK:
        description: 'SukiSU hook type'
        required: false
        type: choice
        options: [kprobe, manual, tracepoint]
        default: manual
      LSM:
        description: 'Enable kernel-level Baseband Guard (LSM)?'
        required: true
        type: boolean
        default: false
      susfs_mapping_json:
        description: 'JSON map for SusFS branch per combo. Keys: android12-5.10, android13-5.10, android13-5.15, android14-5.15, android14-6.1, android15-6.6'
        required: false
        type: string
        default: '{"android12-5.10":"","android13-5.10":"","android13-5.15":"","android14-5.15":"","android14-6.1":"","android15-6.6":""}'

jobs:
  fanout:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.mk-matrix.outputs.matrix }}
    steps:
      - id: mk-matrix
        shell: bash
        run: |
          set -euo pipefail
          in="${{ github.event.inputs.configs }}"
          in="${in// /}"
          IFS=',' read -r -a arr <<< "$in"
          # de-duplicate and cap to 10 devices if desired
          uniq=()
          declare -A seen=()
          for x in "${arr[@]}"; do
            [ -z "$x" ] && continue
            if [[ -z "${seen[$x]+x}" ]]; then
              uniq+=("$x"); seen[$x]=1
            fi
          done
          if [ "${#uniq[@]}" -eq 0 ]; then
            echo "No valid configs provided." >&2
            exit 1
          fi
          json_array="$(printf '%s\n' "${uniq[@]}" | jq -R . | jq -s .)"
          echo "matrix=$json_array" >> "$GITHUB_OUTPUT"
          echo "Matrix: $json_array"

  build:
    name: build (${{ matrix.config }}, ${{ inputs.ksun_branch }})
    needs: fanout
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.fanout.outputs.matrix) }}
    steps:
      - name: Resolve selection to parameters
        id: select
        shell: bash
        run: |
          set -euo pipefail
          sel="${{ matrix.config }}"
          model=""; soc=""; branch=""; manifest=""; android_version=""; kernel_version=""
          
          case "$sel" in
            oneplus_11_v)
              model="OP11"; soc="kalama"; branch="oneplus/sm8550"; manifest="oneplus_11_v.xml"; android_version="android13"; kernel_version="5.15"
              ;;
            oneplus_13)
              model="OP13-CN"; soc="sun"; branch="oneplus/sm8750"; manifest="oneplus_13.xml"; android_version="android15"; kernel_version="6.6"
              ;;
            oneplus_13_global)
              model="OP13-GLO"; soc="sun"; branch="oneplus/sm8750"; manifest="oneplus_13_global.xml"; android_version="android15"; kernel_version="6.6"
              ;;
            oneplus_ace5_pro)
              model="OPAce5Pro"; soc="sun"; branch="oneplus/sm8750"; manifest="oneplus_ace5_pro.xml"; android_version="android15"; kernel_version="6.6"
              ;;
            oneplus_13s)
              model="OP13S"; soc="sun"; branch="oneplus/sm8750"; manifest="oneplus_13s.xml"; android_version="android15"; kernel_version="6.6"
              ;;
            oneplus_pad_3)
              model="OP-PAD-3"; soc="sun"; branch="oneplus/sm8750"; manifest="oneplus_pad_3.xml"; android_version="android15"; kernel_version="6.6"
              ;;
            oneplus_13t)
              model="OP13T"; soc="sun"; branch="oneplus/sm8750"; manifest="oneplus_13t.xml"; android_version="android15"; kernel_version="6.6"
              ;;
            oneplus_pad_2_pro)
              model="OP-PAD-2-PRO"; soc="sun"; branch="oneplus/sm8750"; manifest="oneplus_pad_2_pro.xml"; android_version="android15"; kernel_version="6.6"
              ;;
            oneplus12_v)
              model="OP12"; soc="pineapple"; branch="oneplus/sm8650"; manifest="oneplus12_v.xml"; android_version="android14"; kernel_version="6.1"
              ;;
            oneplus_13r)
              model="OP13r"; soc="pineapple"; branch="oneplus/sm8650"; manifest="oneplus_13r.xml"; android_version="android14"; kernel_version="6.1"
              ;;
            oneplus_ace5)
              model="OP-ACE-5"; soc="pineapple"; branch="oneplus/sm8650"; manifest="oneplus_ace5.xml"; android_version="android14"; kernel_version="6.1"
              ;;
            oneplus_ace_3v_v)
              model="OP-ACE-3V"; soc="pineapple"; branch="oneplus/sm7675"; manifest="oneplus_ace_3v_v.xml"; android_version="android14"; kernel_version="6.1"
              ;;
            oneplus_nord_4_v)
              model="OP-NORD-4"; soc="pineapple"; branch="oneplus/sm7675"; manifest="oneplus_nord_4_v.xml"; android_version="android14"; kernel_version="6.1"
              ;;
            oneplus_nord_5)
              model="OP-Nord-5"; soc="cliffs"; branch="oneplus/sm8635"; manifest="oneplus_nord_5.xml"; android_version="android14"; kernel_version="6.1"
              ;;
            oneplus_pad2_v)
              model="OP-PAD-2"; soc="pineapple"; branch="oneplus/sm8650"; manifest="oneplus_pad2_v.xml"; android_version="android14"; kernel_version="6.1"
              ;;
            oneplus_ace3_pro_v)
              model="OP-Ace3-Pro"; soc="pineapple"; branch="oneplus/sm8650"; manifest="oneplus_ace3_pro_v.xml"; android_version="android14"; kernel_version="6.1"
              ;;
            oneplus_nord_ce4_lite_5g_v)
              model="OP-Nord-CE4-LITE"; soc="blair"; branch="oneplus/sm6375"; manifest="oneplus_nord_ce4_lite_5g_v.xml"; android_version="android14"; kernel_version="6.1"
              ;;
            oneplus_pad_pro_v)
              model="OP-PAD-Pro"; soc="pineapple"; branch="oneplus/sm8650"; manifest="oneplus_pad_pro_v.xml"; android_version="android14"; kernel_version="6.1"
              ;;
            oneplus_11r_v)
              model="OP11r"; soc="waipio"; branch="oneplus/sm8475"; manifest="oneplus_11r_v.xml"; android_version="android12"; kernel_version="5.10"
              ;;
            oneplus_open_v)
              model="OP-OPEN"; soc="kalama"; branch="oneplus/sm8550"; manifest="oneplus_open_v.xml"; android_version="android13"; kernel_version="5.15"
              ;;
            oneplus_ace2_v)
              model="OP-ACE-2"; soc="waipio"; branch="oneplus/sm8475"; manifest="oneplus_ace2_v.xml"; android_version="android12"; kernel_version="5.10"
              ;;
            oneplus_10t_v)
              model="OP10t"; soc="waipio"; branch="oneplus/sm8475"; manifest="oneplus_10t_v.xml"; android_version="android12"; kernel_version="5.10"
              ;;
            oneplus_10_pro_v)
              model="OP10pro"; soc="waipio"; branch="oneplus/sm8450"; manifest="oneplus_10_pro_v.xml"; android_version="android12"; kernel_version="5.10"
              ;;
            oneplus_ace2_pro_v)
              model="OP-ACE-2-PRO"; soc="kalama"; branch="oneplus/sm8550"; manifest="oneplus_ace2_pro_v.xml"; android_version="android13"; kernel_version="5.15"
              ;;
            oneplus_12r_v)
              model="OP12r"; soc="kalama"; branch="oneplus/sm8550"; manifest="oneplus_12r_v.xml"; android_version="android13"; kernel_version="5.15"
              ;;
            oneplus_ace3_v)
              model="OP13T"; soc="sun"; branch="oneplus/sm8750"; manifest="oneplus_13t.xml"; android_version="android15"; kernel_version="6.6"
              ;;
            oneplus_ace_pro_v)
              model="OP-ACE-PRO"; soc="kalama"; branch="oneplus/sm8550"; manifest="oneplus_ace_pro_v.xml"; android_version="android13"; kernel_version="5.15"
              ;;
            oneplus_ace5_ultra)
              model="OP-ACE-5-ULTRA"; soc="sun"; branch="oneplus/sm8750"; manifest="oneplus_ace5_ultra.xml"; android_version="android15"; kernel_version="6.6"
              ;;
            *)
              echo "Unknown config: $sel"; exit 1
              ;;
          esac
          
          echo "model=$model"           >> "$GITHUB_ENV"
          echo "soc=$soc"               >> "$GITHUB_ENV"
          echo "branch=$branch"         >> "$GITHUB_ENV"
          echo "manifest=$manifest"     >> "$GITHUB_ENV"
          echo "android_version=$android_version" >> "$GITHUB_ENV"
          echo "kernel_version=$kernel_version"   >> "$GITHUB_ENV"

      - name: Resolve SUSFS branch from JSON input
        id: susfs
        shell: bash
        run: |
          set -euo pipefail
          key="${{ env.android_version }}-${{ env.kernel_version }}"
          json='${{ inputs.susfs_mapping_json }}'
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update -qq
            sudo apt-get install -y jq
          fi
          declare -A map=(
            ["android12-5.10"]=""
            ["android13-5.10"]=""
            ["android13-5.15"]=""
            ["android14-5.15"]=""
            ["android14-6.1"]=""
            ["android15-6.6"]=""
          )
          if [[ -n "$json" && "$json" != "" ]]; then
            if jq empty <<<"$json" >/dev/null 2>&1; then
              for k in "${!map[@]}"; do
                v=$(jq -r --arg k "$k" '.[$k] // empty' <<<"$json" 2>/dev/null || echo "")
                if [[ -n "$v" && "$v" != "null" ]]; then
                  map["$k"]="$v"
                  echo "Mapped $k -> $v"
                fi
              done
            else
              echo "WARNING: Invalid JSON provided, using defaults"
            fi
          fi
          if [[ -z "${map[$key]+_exists}" ]]; then
            echo "ERROR: Unsupported Android/Kernel combo: $key" >&2
            echo "Supported combos: ${!map[*]}" >&2
            exit 1
          fi
          susfs_branch="${map[$key]}"
          if [[ -z "$susfs_branch" ]]; then
            susfs_branch="gki-${key}"
          fi
          echo "Selected SusFS branch for $key: $susfs_branch"
          echo "susfs_branch=$susfs_branch" >> "$GITHUB_OUTPUT"

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build Kernel
        uses: ./.github/actions/build
        with:
          model: ${{ env.model }}
          soc: ${{ env.soc }}
          branch: ${{ env.branch }}
          manifest: ${{ env.manifest }}
          android_version: ${{ env.android_version }}
          kernel_version: ${{ env.kernel_version }}
          ksun_branch: ${{ inputs.ksun_branch }}
          susfs_branch: ${{ steps.susfs.outputs.susfs_branch }}
          optimize_level: ${{ inputs.optimize_level }}
          KSU_META: ${{ inputs.KSU_META }}
          HOOK: ${{ inputs.HOOK }}
          LSM: ${{ inputs.LSM }}

  trigger-release:
    needs: [build]
    runs-on: ubuntu-latest
    if: ${{ inputs.make_release }}
    env:
      REPO_OWNER: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
      RELEASE_NAME: 'SukiSU Ultra Kernels v1.5.12 - OnePlus Devices'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate and Create New Tag
        run: |
          set -euo pipefail
          git fetch --tags --quiet
          BASE_TAG="v1.5.12"
          LATEST_TAG=$(git tag --list "${BASE_TAG}-r*" | sort -V | tail -n1 || true)
          if [ -z "$LATEST_TAG" ]; then
            NEW_TAG="${BASE_TAG}-r0"
          else
            n=$(echo "$LATEST_TAG" | awk -F'-r' '{print $2}')
            [ -z "$n" ] && n=0
            n=$((n + 1))
            NEW_TAG="${BASE_TAG}-r${n}"
          fi
          echo "NEW_TAG=${NEW_TAG}" >> "$GITHUB_ENV"
          git tag "$NEW_TAG"
          git push origin "$NEW_TAG"
          echo "Created tag: $NEW_TAG"

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts

      - name: Generate Device List and Final Release Notes
        id: generate-notes
        shell: bash
        run: |
          set -euo pipefail
          echo "=== Start building the release notes ==="
          cat << 'EOF' > release_notes.md
          # SukiSU Ultra Kernels v1.5.12 for OnePlus Devices
          
          🚀 **Custom kernels with SukiSU Ultra root solution and SUSFS v1.5.12 overlay filesystem**
          
          ## 📦 Required Modules & Managers
          **SUSFS Module**: https://github.com/sidex15/ksu_module_susfs
          
          **Official SukiSU Ultra Manager**: https://github.com/SukiSU-Ultra/SukiSU-Ultra
          
          ## 🛠️ Built Devices
          
          | Model | Kernel Version |
          |-------|----------------|
          EOF
          
          if [ -d "./downloaded-artifacts" ]; then
            find downloaded-artifacts -name "*.txt" -type f -print0 | sort -z | while IFS= read -r -d '' file; do
              if [ -f "$file" ]; then
                model=$(basename "$file" .txt)
                version=$(cat "$file" 2>/dev/null || echo "Unknown")
                printf "| %-20s | %-16s |\n" "$model" "$version" >> release_notes.md
              fi
            done
          fi
          
          cat << 'EOF' >> release_notes.md
          
          ## 🚀 Key Features
          - ✅ **SukiSU Ultra** - Advanced root solution with superior module support
          - ✅ **SUSFS v1.5.12** - Stealth overlay filesystem for app hiding & modding
          - ✅ **WireGuard VPN** - Native kernel-level VPN support
          - ✅ **Magic Mount** - Seamless module mounting without root modifications
          - ✅ **Ptrace Leak Fix** - Security patch for kernels < 5.16
          - ✅ **Manual Hooks** - Efficient hooking mechanism (scope_min_manual_hooks_v1.5)
          - ✅ **CONFIG_TMPFS_XATTR** - Full Mountify & advanced mounting support
          - ✅ **BBR v1** - TCP congestion control for optimal networking
          - ✅ **HMBIRD SCX Scheduler** - Performance optimized for 6.6 kernels
          - ✅ **Baseband Guard (BBG)** - Kernel-level baseband protection
          - ✅ **xx_maps Hide** - Advanced root concealment for security apps
          
          ## ⚠️ Installation Warning
          **Flashing custom kernels may void your warranty and risk bricking your device. Always backup your data!**
          
          ## 📚 Installation Guide
          1. Download your device ZIP from releases
          2. Boot to custom recovery (TWRP/OrangeFox)
          3. Flash the kernel ZIP
          4. Install SukiSU Ultra Manager
          5. Configure SUSFS modules
          EOF
          
          echo "--- Final Release Notes ---"
          cat release_notes.md

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          gh release create "${{ env.NEW_TAG }}" \
            --repo "${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}" \
            --title "${{ env.RELEASE_NAME }}" \
            --notes-file release_notes.md \
            --prerelease

      - name: Upload Release Assets Dynamically
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob
          upload_count=0
          for file in ./downloaded-artifacts/*/*.zip; do
            if [ -f "$file" ]; then
              echo "Uploading $file..."
              gh release upload "${{ env.NEW_TAG }}" "$file" --clobber || \
                echo "WARNING: Failed to upload $file"
              ((upload_count++))
            fi
          done
          echo "Uploaded $upload_count assets"
          shopt -u nullglob
