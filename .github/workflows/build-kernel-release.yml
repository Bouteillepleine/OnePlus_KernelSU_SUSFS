name: Build and Release OnePlus Kernels

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
    inputs:
      make_release:
        description: 'Do you want to create a release?'
        required: true
        type: boolean
        default: false
      ksun_branch:
        description: 'Enter KernelSU Next Branch or commit hash (blank for stable tag)'
        required: true
        type: string
        default: next
      optimize_level:
        description: 'Compiler optimization level'
        required: true
        type: choice
        options: [O2, O3]
        default: O2
      KSU_META:
        description: 'SukiSU Ultra branch/custom version identifier (e.g., susfs-main/⚡Ultra⚡/)'
        required: false
        type: string
        default: 'susfs-main/⚡Ultra⚡/'
      HOOK:
        description: 'SukiSU hook type'
        required: false
        type: choice
        options: [kprobe, manual, tracepoint]
        default: manual
      LSM:
        description: 'Enable kernel-level Baseband Guard (LSM)?'
        required: true
        type: boolean
        default: false
      susfs_mapping_json:
        description: 'JSON map for SusFS branch per combo. Keys: android12-5.10, android13-5.10, android13-5.15, android14-5.15, android14-6.1, android15-6.6'
        required: false
        type: string
        default: '{"android12-5.10":"","android13-5.10":"","android13-5.15":"","android14-5.15":"","android14-6.1":"","android15-6.6":""}'

jobs:
  build:
    name: build (${{ matrix.model }}, ${{ matrix.soc }}, ${{ matrix.branch }}, ${{ matrix.manifest }}, ${{ matrix.android_version }}, ${{ matrix.kernel_version }}, ${{ inputs.ksun_branch }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        # batch-1
        - model: OP11
          soc: kalama
          branch: oneplus/sm8550
          manifest: oneplus_11_v.xml
          android_version: android13
          kernel_version: '5.15'
        - model: OP13-CN
          soc: sun
          branch: oneplus/sm8750
          manifest: oneplus_13.xml
          android_version: android15
          kernel_version: '6.6'
        - model: OP13-GLO
          soc: sun
          branch: oneplus/sm8750
          manifest: oneplus_13_global.xml
          android_version: android15
          kernel_version: '6.6'
        - model: OPAce5Pro
          soc: sun
          branch: oneplus/sm8750
          manifest: oneplus_ace5_pro.xml
          android_version: android15
          kernel_version: '6.6'
        - model: OP13S
          soc: sun
          branch: oneplus/sm8750
          manifest: oneplus_13s.xml
          android_version: android15
          kernel_version: '6.6'
        - model: OP-PAD-3
          soc: sun
          branch: oneplus/sm8750
          manifest: oneplus_pad_3.xml
          android_version: android15
          kernel_version: '6.6'
        - model: OP13T
          soc: sun
          branch: oneplus/sm8750
          manifest: oneplus_13t.xml
          android_version: android15
          kernel_version: '6.6'
        - model: OP-PAD-2-PRO
          soc: sun
          branch: oneplus/sm8750
          manifest: oneplus_pad_2_pro.xml
          android_version: android15
          kernel_version: '6.6'
        # batch-2
        - model: OP12
          soc: pineapple
          branch: oneplus/sm8650
          manifest: oneplus12_v.xml
          android_version: android14
          kernel_version: '6.1'
        - model: OP13r
          soc: pineapple
          branch: oneplus/sm8650
          manifest: oneplus_13r.xml
          android_version: android14
          kernel_version: '6.1'
        - model: OP-ACE-5
          soc: pineapple
          branch: oneplus/sm8650
          manifest: oneplus_ace5.xml
          android_version: android14
          kernel_version: '6.1'
        - model: OP-ACE-3V
          soc: pineapple
          branch: oneplus/sm7675
          manifest: oneplus_ace_3v_v.xml
          android_version: android14
          kernel_version: '6.1'
        - model: OP-NORD-4
          soc: pineapple
          branch: oneplus/sm7675
          manifest: oneplus_nord_4_v.xml
          android_version: android14
          kernel_version: '6.1'
        - model: OP-Nord-5
          soc: cliffs
          branch: oneplus/sm8635
          manifest: oneplus_nord_5.xml
          android_version: android14
          kernel_version: '6.1'
        - model: OP-PAD-2
          soc: pineapple
          branch: oneplus/sm8650
          manifest: oneplus_pad2_v.xml
          android_version: android14
          kernel_version: '6.1'
        - model: OP-Ace3-Pro
          soc: pineapple
          branch: oneplus/sm8650
          manifest: oneplus_ace3_pro_v.xml
          android_version: android14
          kernel_version: '6.1'
        - model: OP-Nord-CE4-LITE
          soc: blair
          branch: oneplus/sm6375
          manifest: oneplus_nord_ce4_lite_5g_v.xml
          android_version: android14
          kernel_version: '6.1'
        - model: OP-PAD-Pro
          soc: pineapple
          branch: oneplus/sm8650
          manifest: oneplus_pad_pro_v.xml
          android_version: android14
          kernel_version: '6.1'
        # batch-3
        - model: OP11r
          soc: waipio
          branch: oneplus/sm8475
          manifest: oneplus_11r_v.xml
          android_version: android12
          kernel_version: '5.10'
        - model: OP-OPEN
          soc: kalama
          branch: oneplus/sm8550
          manifest: oneplus_open_v.xml
          android_version: android13
          kernel_version: '5.15'
        - model: OP-ACE-2
          soc: waipio
          branch: oneplus/sm8475
          manifest: oneplus_ace2_v.xml
          android_version: android12
          kernel_version: '5.10'
        - model: OP10t
          soc: waipio
          branch: oneplus/sm8475
          manifest: oneplus_10t_v.xml
          android_version: android12
          kernel_version: '5.10'
        - model: OP-Nord-4-CE
          soc: crow
          branch: oneplus/sm7550
          manifest: oneplus_nord_ce4_v.xml
          android_version: android13
          kernel_version: '5.15'
        - model: OP10pro
          soc: waipio
          branch: oneplus/sm8450
          manifest: oneplus_10_pro_v.xml
          android_version: android12
          kernel_version: '5.10'
        - model: OP-ACE-2-PRO
          soc: kalama
          branch: oneplus/sm8550
          manifest: oneplus_ace2_pro_v.xml
          android_version: android13
          kernel_version: '5.15'
        - model: OP12r
          soc: kalama
          branch: oneplus/sm8550
          manifest: oneplus_12r_v.xml
          android_version: android13
          kernel_version: '5.15'
    steps:
      - name: Resolve SUSFS branch from JSON input
        id: susfs
        shell: bash
        run: |
          set -euo pipefail
          key="${{ matrix.android_version }}-${{ matrix.kernel_version }}"
          json='${{ inputs.susfs_mapping_json }}'
          
          # Install jq if not available
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y jq
          fi
          
          # Known keys (ensure unsupported combos fail early)
          declare -A map=(
            ["android12-5.10"]=""
            ["android13-5.10"]=""
            ["android13-5.15"]=""
            ["android14-5.15"]=""
            ["android14-6.1"]=""
            ["android15-6.6"]=""
          )
          
          # Populate map from JSON if provided and valid
          if [[ -n "$json" && "$json" != "" ]]; then
            echo "Parsing SUSFS mapping JSON: $json"
            if jq empty <<<"$json" >/dev/null 2>&1; then
              for k in "${!map[@]}"; do
                v=$(jq -r --arg k "$k" '.["'$k'"] // empty' <<<"$json" 2>/dev/null || echo "")
                if [[ -n "$v" && "$v" != "null" ]]; then
                  map["$k"]="$v"
                  echo "Mapped $k -> $v"
                fi
              done
            else
              echo "WARNING: Invalid JSON provided, using defaults"
            fi
          fi
          
          # Validate key exists in known map
          if [[ -z "${map[$key]+_exists}" ]]; then
            echo "ERROR: Unsupported Android/Kernel combo: $key" >&2
            echo "Supported combos: ${!map[*]}" >&2
            exit 1
          fi
          
          susfs_branch="${map[$key]}"
          # Fallback to gki-${key} if empty
          if [[ -z "$susfs_branch" ]]; then
            susfs_branch="gki-${key}"
          fi
          
          echo "Selected SusFS branch for $key: $susfs_branch"
          echo "susfs_branch=$susfs_branch" >> "$GITHUB_OUTPUT"

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build Kernel
        uses: ./.github/actions
        with:
          model: ${{ matrix.model }}
          soc: ${{ matrix.soc }}
          branch: ${{ matrix.branch }}
          manifest: ${{ matrix.manifest }}
          android_version: ${{ matrix.android_version }}
          kernel_version: ${{ matrix.kernel_version }}
          ksun_branch: ${{ inputs.ksun_branch }}
          susfs_branch: ${{ steps.susfs.outputs.susfs_branch }}
          optimize_level: ${{ inputs.optimize_level }}
          KSU_META: ${{ inputs.KSU_META }}
          HOOK: ${{ inputs.HOOK }}
          LSM: ${{ inputs.LSM }}

  trigger-release:
    needs: [build]
    runs-on: ubuntu-latest
    if: ${{ inputs.make_release }}
    env:
      REPO_OWNER: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_NAME: 'TEST BUILD OnePlus Kernels With KernelSU Next & SUSFS v1.5.12 TEST BUILD'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate and Create New Tag
        run: |
          set -euo pipefail
          git fetch --tags --quiet
          BASE_TAG="v1.5.12"
          LATEST_TAG=$(git tag --list "${BASE_TAG}-r*" | sort -V | tail -n1 || true)
          if [ -z "$LATEST_TAG" ]; then
            NEW_TAG="${BASE_TAG}-r0"
          else
            n=$(echo "$LATEST_TAG" | awk -F'-r' '{print $2}')
            [ -z "$n" ] && n=0
            n=$((n + 1))
            NEW_TAG="${BASE_TAG}-r${n}"
          fi
          echo "NEW_TAG=${NEW_TAG}" >> "$GITHUB_ENV"
          git tag "$NEW_TAG"
          git push origin "$NEW_TAG"
          echo "Created tag: $NEW_TAG"

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts

      - name: Generate Device List and Final Release Notes
        id: generate-notes
        shell: bash
        run: |
          set -euo pipefail
          echo "=== Start building the release notes ==="
          cat << 'EOF' > release_notes.md
          This release contains KernelSU Next and SUSFS v1.5.12

          Module: 
          -> https://github.com/sidex15/ksu_module_susfs  
          
          Official Managers:
          -> https://github.com/KernelSU-Next/KernelSU-Next  
          
          Non-Official Managers:
          -> https://github.com/WildKernels/Wild_KSU
          
          ### Built Devices
          
          | Model | Kernel Version |
          |-------|----------------|
          EOF
          
          if [ -d "./downloaded-artifacts" ]; then
            for file in $(find downloaded-artifacts -name "*.txt" -type f | sort 2>/dev/null || true); do
              if [ -f "$file" ]; then
                model=$(basename "$file" .txt)
                version=$(cat "$file" 2>/dev/null || echo "Unknown")
                printf "| %-12s | %-16s |\n" "$model" "$version" >> release_notes.md
              fi
            done
          fi
          
          cat << 'EOF' >> release_notes.md
          
          ### Features
          - [+] KernelSU-Next / WildKSU Manager Support
          - [+] SUSFS v1.5.12
          - [+] Wireguard Support
          - [+] Magic Mount Support
          - [+] Ptrace message leak fix for kernels < 5.16
          - [+] Manual Hooks [scope_min_manual_hooks_v1.4]
          - [+] CONFIG_TMPFS_XATTR Support [Mountify Support]
          - [+] BBR v1 Support
          - [+] HMBIRD scx support for OnePlus 13 & OnePlus Ace 5 Pro
          - [+] Baseband Guard Support (BBG).
          - [+] xx_maps hide.
          EOF
          
          echo "--- Final Release Notes ---"
          cat release_notes.md

      - name: Create GitHub Release
        run: |
          set -euo pipefail
          gh release create "${{ env.NEW_TAG }}" \
            --repo "${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}" \
            --title "${{ env.RELEASE_NAME }}" \
            --notes-file release_notes.md \
            --prerelease

      - name: Upload Release Assets Dynamically
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob
          upload_count=0
          for file in ./downloaded-artifacts/*/*.zip; do
            if [ -f "$file" ]; then
              echo "Uploading $file..."
              gh release upload "${{ env.NEW_TAG }}" "$file" --clobber || \
                echo "WARNING: Failed to upload $file"
              ((upload_count++))
            fi
          done
          echo "Uploaded $upload_count assets"
          shopt -u nullglob
